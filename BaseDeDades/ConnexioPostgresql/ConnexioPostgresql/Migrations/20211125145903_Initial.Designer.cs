// <auto-generated />
using ConnexioPostgresql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ConnexioPostgresql.Migrations
{
    [DbContext(typeof(dualfctContext))]
    [Migration("20211125145903_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "en_US.UTF-8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ConnexioPostgresql.Alumne", b =>
                {
                    b.Property<string>("Dni")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("DNI")
                        .IsFixedLength(true);

                    b.Property<string>("CognomAlumne")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .HasColumnName("Cognom_Alumne")
                        .IsFixedLength(true);

                    b.Property<string>("NomAlumne")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .HasColumnName("Nom_Alumne")
                        .IsFixedLength(true);

                    b.Property<string>("NomCicle")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("Nom_cicle")
                        .IsFixedLength(true);

                    b.Property<string>("TipusPractica")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .HasColumnName("Tipus_Practica")
                        .IsFixedLength(true);

                    b.HasKey("Dni")
                        .HasName("Alumnes_pkey");

                    b.HasIndex("NomCicle");

                    b.ToTable("Alumnes");
                });

            modelBuilder.Entity("ConnexioPostgresql.Asociat", b =>
                {
                    b.Property<string>("CicleNom")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("Cicle_Nom")
                        .IsFixedLength(true);

                    b.Property<string>("EmpresaNif")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .HasColumnName("Empresa_NIF")
                        .IsFixedLength(true);

                    b.HasKey("CicleNom", "EmpresaNif")
                        .HasName("Pk_Asociada");

                    b.HasIndex("EmpresaNif");

                    b.ToTable("Asociada");
                });

            modelBuilder.Entity("ConnexioPostgresql.Cicle", b =>
                {
                    b.Property<string>("NomCicle")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("Nom_Cicle")
                        .IsFixedLength(true);

                    b.HasKey("NomCicle")
                        .HasName("Cicle_pkey");

                    b.ToTable("Cicle");
                });

            modelBuilder.Entity("ConnexioPostgresql.CicleContacte", b =>
                {
                    b.Property<string>("CicleNom")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("Cicle_Nom")
                        .IsFixedLength(true);

                    b.Property<string>("ContacteDni")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("Contacte_DNI")
                        .IsFixedLength(true);

                    b.HasKey("CicleNom", "ContacteDni");

                    b.HasIndex("ContacteDni");

                    b.ToTable("Cicle_Contacte");
                });

            modelBuilder.Entity("ConnexioPostgresql.Comunicacio", b =>
                {
                    b.Property<string>("UsuariNom")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .HasColumnName("Usuari_Nom")
                        .IsFixedLength(true);

                    b.Property<string>("ContacteDni")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("Contacte_DNI")
                        .IsFixedLength(true);

                    b.HasKey("UsuariNom", "ContacteDni")
                        .HasName("Pk_Comunicacions");

                    b.HasIndex("ContacteDni");

                    b.ToTable("Comunicacions");
                });

            modelBuilder.Entity("ConnexioPostgresql.Contacte", b =>
                {
                    b.Property<string>("Dni")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("DNI")
                        .IsFixedLength(true);

                    b.Property<string>("Especialització")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .IsFixedLength(true);

                    b.Property<string>("NifEmpresa")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .HasColumnName("NIF_Empresa")
                        .IsFixedLength(true);

                    b.Property<string>("Nom")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .IsFixedLength(true);

                    b.Property<string>("Telèfon")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .IsFixedLength(true);

                    b.HasKey("Dni")
                        .HasName("Contacte_pkey");

                    b.HasIndex("NifEmpresa");

                    b.ToTable("Contacte");
                });

            modelBuilder.Entity("ConnexioPostgresql.Empresa", b =>
                {
                    b.Property<string>("Nif")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .HasColumnName("NIF")
                        .IsFixedLength(true);

                    b.Property<string>("Mail")
                        .HasMaxLength(50)
                        .HasColumnType("character(50)")
                        .IsFixedLength(true);

                    b.Property<string>("Telèfon")
                        .HasMaxLength(9)
                        .HasColumnType("character(9)")
                        .IsFixedLength(true);

                    b.Property<string>("Ubicació")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .IsFixedLength(true);

                    b.HasKey("Nif")
                        .HasName("Empresa_pkey");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("ConnexioPostgresql.Pertany", b =>
                {
                    b.Property<string>("AlumnesDni")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("Alumnes_DNI")
                        .IsFixedLength(true);

                    b.Property<string>("AsociadaCicleNom")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("Asociada_Cicle_Nom")
                        .IsFixedLength(true);

                    b.Property<string>("AsociadaEmpresaNif")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .HasColumnName("Asociada_Empresa_NIF")
                        .IsFixedLength(true);

                    b.HasKey("AlumnesDni", "AsociadaCicleNom", "AsociadaEmpresaNif")
                        .HasName("Pk_Pertany");

                    b.HasIndex("AsociadaCicleNom", "AsociadaEmpresaNif");

                    b.ToTable("Pertany");
                });

            modelBuilder.Entity("ConnexioPostgresql.Usuari", b =>
                {
                    b.Property<string>("Nom")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .IsFixedLength(true);

                    b.Property<string>("Administrador")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .IsFixedLength(true);

                    b.Property<string>("Contrasenya")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .IsFixedLength(true);

                    b.Property<string>("Mail")
                        .HasMaxLength(50)
                        .HasColumnType("character(50)")
                        .IsFixedLength(true);

                    b.Property<string>("NomCicle")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .HasColumnName("Nom_Cicle")
                        .IsFixedLength(true);

                    b.HasKey("Nom")
                        .HasName("Usuari_pkey");

                    b.HasIndex("NomCicle");

                    b.ToTable("Usuari");
                });

            modelBuilder.Entity("ConnexioPostgresql.Alumne", b =>
                {
                    b.HasOne("ConnexioPostgresql.Cicle", "Nom_Cicle")
                        .WithMany("Alumnes")
                        .HasForeignKey("NomCicle")
                        .HasConstraintName("Fk_Nom_Cicle")
                        .IsRequired();

                    b.Navigation("Nom_Cicle");
                });

            modelBuilder.Entity("ConnexioPostgresql.Asociat", b =>
                {
                    b.HasOne("ConnexioPostgresql.Cicle", "Cicle_Nom")
                        .WithMany("Asociada")
                        .HasForeignKey("CicleNom")
                        .HasConstraintName("Fk_Cicle_Nom")
                        .IsRequired();

                    b.HasOne("ConnexioPostgresql.Empresa", "Empresa_Nif")
                        .WithMany("Asociada")
                        .HasForeignKey("EmpresaNif")
                        .HasConstraintName("Fk_Empresa_Nif")
                        .IsRequired();

                    b.Navigation("Cicle_Nom");

                    b.Navigation("Empresa_Nif");
                });

            modelBuilder.Entity("ConnexioPostgresql.CicleContacte", b =>
                {
                    b.HasOne("ConnexioPostgresql.Cicle", "Cicle_Nom")
                        .WithMany("CicleContactes")
                        .HasForeignKey("CicleNom")
                        .HasConstraintName("Fk_Cicle_Nom")
                        .IsRequired();

                    b.HasOne("ConnexioPostgresql.Contacte", "Contacte_Dni")
                        .WithMany("CicleContactes")
                        .HasForeignKey("ContacteDni")
                        .HasConstraintName("Fk_Contacte_Dni")
                        .IsRequired();

                    b.Navigation("Cicle_Nom");

                    b.Navigation("Contacte_Dni");
                });

            modelBuilder.Entity("ConnexioPostgresql.Comunicacio", b =>
                {
                    b.HasOne("ConnexioPostgresql.Contacte", "Contacte_Dni")
                        .WithMany("Comunicacions")
                        .HasForeignKey("ContacteDni")
                        .HasConstraintName("Fk_Dni_Contacte")
                        .IsRequired();

                    b.HasOne("ConnexioPostgresql.Usuari", "Usuari_Nom")
                        .WithMany("Comunicacions")
                        .HasForeignKey("UsuariNom")
                        .HasConstraintName("Fk_Nom_Usuari")
                        .IsRequired();

                    b.Navigation("Contacte_Dni");

                    b.Navigation("Usuari_Nom");
                });

            modelBuilder.Entity("ConnexioPostgresql.Contacte", b =>
                {
                    b.HasOne("ConnexioPostgresql.Empresa", "Nif_Empresa")
                        .WithMany("Contactes")
                        .HasForeignKey("NifEmpresa")
                        .HasConstraintName("Fk_Nif_Empresa");

                    b.Navigation("Nif_Empresa");
                });

            modelBuilder.Entity("ConnexioPostgresql.Pertany", b =>
                {
                    b.HasOne("ConnexioPostgresql.Alumne", "Alumnes_Dni")
                        .WithMany("Pertanys")
                        .HasForeignKey("AlumnesDni")
                        .HasConstraintName("Fk_Alumnes_Dni")
                        .IsRequired();

                    b.HasOne("ConnexioPostgresql.Asociat", "Asociada")
                        .WithMany("Pertanys")
                        .HasForeignKey("AsociadaCicleNom", "AsociadaEmpresaNif")
                        .HasConstraintName("Fk_Asociada_Cicle")
                        .IsRequired();

                    b.Navigation("Alumnes_Dni");

                    b.Navigation("Asociada");
                });

            modelBuilder.Entity("ConnexioPostgresql.Usuari", b =>
                {
                    b.HasOne("ConnexioPostgresql.Cicle", "Nom_Cicle")
                        .WithMany("Usuaris")
                        .HasForeignKey("NomCicle")
                        .HasConstraintName("Fk_Usuri_Cicle")
                        .IsRequired();

                    b.Navigation("Nom_Cicle");
                });

            modelBuilder.Entity("ConnexioPostgresql.Alumne", b =>
                {
                    b.Navigation("Pertanys");
                });

            modelBuilder.Entity("ConnexioPostgresql.Asociat", b =>
                {
                    b.Navigation("Pertanys");
                });

            modelBuilder.Entity("ConnexioPostgresql.Cicle", b =>
                {
                    b.Navigation("Alumnes");

                    b.Navigation("Asociada");

                    b.Navigation("CicleContactes");

                    b.Navigation("Usuaris");
                });

            modelBuilder.Entity("ConnexioPostgresql.Contacte", b =>
                {
                    b.Navigation("CicleContactes");

                    b.Navigation("Comunicacions");
                });

            modelBuilder.Entity("ConnexioPostgresql.Empresa", b =>
                {
                    b.Navigation("Asociada");

                    b.Navigation("Contactes");
                });

            modelBuilder.Entity("ConnexioPostgresql.Usuari", b =>
                {
                    b.Navigation("Comunicacions");
                });
#pragma warning restore 612, 618
        }
    }
}
